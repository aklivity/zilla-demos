---
name: zilla-petstore
guards:
  petstore_auth:
    type: jwt
    options:
      issuer: https://auth.example.com
      audience: https://api.example.com
      keys:
        - kty: RSA
          n: qqEu50hX+43Bx4W1UYWnAVKwFm+vDbP0kuIOSLVNa+HKQdHTf+3Sei5UCnkskn796izA29D0DdCy3ET9oaKRHIJyKbqFl0rv6f516QzOoXKC6N01sXBHBE/ovs0wwDvlaW+gFGPgkzdcfUlyrWLDnLV7LcuQymhTND2uH0oR3wJnNENN/OFgM1KGPPDOe19YsIKdLqARgxrhZVsh06OurEviZTXOBFI5r+yac7haDwOQhLHXNv+Y9MNvxs5QLWPFIM3bNUWfYrJnLrs4hGJS+y/KDM9Si+HL30QAFXy4YNO33J8DHjZ7ddG5n8/FqplOKvRtUgjcKWlxoGY4VdVaDQ==
          e: AQAB
          alg: RS256
          kid: example

bindings:
  north_rest_server:
    type: openapi
    kind: server
    vault: pet_server
    options:
      http:
        authorization:
          zilla-petstore:petstore_auth:
            credentials:
              headers:
                authorization: Bearer {credentials}
      specs:
        petstore-rest-spec: specs/petstore-openapi.yaml
    exit: north_rest_kafka_proxy
    telemetry:
      metrics:
        - stream.*
        - http.*
  north_rest_kafka_proxy:
    type: openapi-asyncapi
    kind: proxy
    options:
      specs:
        openapi:
          petstore-rest-spec: specs/petstore-openapi.yaml
        asyncapi:
          petstore-kafka-spec: specs/petstore-kafka-asyncapi.yaml
    routes:
      - when:
          - api-id: petstore-rest-spec
        exit: south_kafka_client
        with:
          api-id: petstore-kafka-spec
    telemetry:
      metrics:
        - stream.*
  south_kafka_client:
    type: asyncapi
    kind: client
    options:
      specs:
        petstore-kafka-spec: specs/petstore-kafka-asyncapi.yaml
      kafka:
        sasl:
          mechanism: plain
          username: ${{env.KAFKA_USER}}
          password: ${{env.KAFKA_PASS}}
      tls:
        trustcacerts: true
        sni:
          - ${{env.KAFKA_BOOTSTRAP_HOST}}
    telemetry:
      metrics:
        - stream.*

telemetry:
  # Desired metrics to track
  metrics:
    - http.active.requests
    - http.duration
    - http.request.size
    - http.response.size
    - stream.active.received
    - stream.active.sent
    - stream.closes.received
    - stream.closes.sent
    - stream.data.received
    - stream.data.sent
    - stream.errors.received
    - stream.errors.sent
    - stream.opens.received
    - stream.opens.sent

  # Prometheus endpoint definition
  exporters:
    prometheus_metric_exporter:
      type: prometheus
      options:
        endpoints:
          - scheme: http
            path: /metrics
            port: 7190
    stdout_exporter:
      type: stdout
