version: "3"
services:

  kafka:
    image: bitnami/kafka:3.2.3
    container_name: kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
      - "29092:9092"
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_BROKER_ID: "1"
      KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@127.0.0.1:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CLIENT:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LOG_DIRS: "/tmp/logs"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_LISTENERS: "CLIENT://:9092,INTERNAL://:29092,CONTROLLER://:9093"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_CFG_ADVERTISED_LISTENERS: "CLIENT://localhost:9092,INTERNAL://kafka:29092"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"

  init-kafka:
    image: bitnami/kafka:3.2.3
    deploy:
      restart_policy:
        condition: none
        max_attempts: 0
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:29092 --list
      
      echo -e 'Creating kafka topic'
      /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists --topic petstore --config cleanup.policy=compact
      
      echo -e 'Successfully created the following topics:'
      /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:29092 --list
      "

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: localhost
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092

  zilla:
    image: ghcr.io/aklivity/zilla:develop-SNAPSHOT
    container_name: zilla
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - "7143:7143"
    environment:
      KEYSTORE_PASSWORD: generated
    volumes:
      - ./zilla.yaml:/etc/zilla/zilla.yaml
      - ./tls/localhost.p12:/etc/zilla/localhost.p12
      - ./specs/openapi.yaml:/etc/zilla/openapi.yaml
      - ./specs/asyncapi.yaml:/etc/zilla/asyncapi.yaml
    command: start -v -e -Pzilla.engine.verbose.composites

networks:
  default:
    name: zilla-taxi-demo-network
    driver: bridge
