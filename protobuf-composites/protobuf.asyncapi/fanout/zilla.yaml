name: example
catalogs:
  host_filesystem:
    type: filesystem
    options:
      subjects:
        fanout:
          path: proto/fanout.proto
bindings:
  north_tcp_server:
    type: tcp
    kind: server
    options:
      host: 0.0.0.0
      port: 7153
    exit: north_http_server
  north_http_server:
    type: http
    kind: server
    options:
      versions:
        - h2
      access-control:
        policy: cross-origin
    routes:
      - when:
          - headers:
              ':scheme': https
              ':authority': 'localhost:7153'
        exit: north_grpc_server
  north_grpc_server:
    type: grpc
    kind: server
    catalog:
      host_filesystem:
        - subject: fanout
    routes:
      - when:
          - method: example.FanoutService/FanoutServerStream
        exit: north_grpc_kafka_mapping
  north_grpc_kafka_mapping:
    type: grpc-kafka
    kind: proxy
    routes:
      - when:
          - method: example.FanoutService/FanoutServerStream
        exit: north_kafka_cache_client
        with:
          capability: fetch
          topic: example.FanoutService.FanoutServerStream
  north_kafka_cache_client:
    type: kafka
    kind: cache_client
    exit: south_kafka_cache_server
  south_kafka_cache_server:
    type: kafka
    kind: cache_server
    options:
      topics:
        - name: example.FanoutService.FanoutServerStream
          value:
            model: protobuf
            catalog:
              host_filesystem:
                - subject: fanout
                  record: FanoutMessage
    exit: south_kafka_client
  south_kafka_client:
    type: kafka
    kind: client
    options:
      servers:
        - kafka:29092
    exit: south_tcp_client
  south_tcp_client:
    type: tcp
    kind: client
