version: "3"
services:

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.2.16
    container_name: redpanda
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --mode dev-container
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s

  console:
    image: docker.redpanda.com/redpandadata/console:v2.3.6
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
        connect:
          enabled: true
          clusters:
            - name: local-connect-cluster
              url: http://connect:8083
    ports:
      - 8080:8080
    depends_on:
      - redpanda

  redpanda-init:
    image: docker.redpanda.com/redpandadata/redpanda:latest
    entrypoint: /bin/sh
    command:
      - "-c"
      - |
        rpk topic create --brokers redpanda:9092 taxi-route-requests
        rpk topic create --brokers redpanda:9092 taxi-route-replies
        rpk topic create --brokers redpanda:9092 taxi-messages
        rpk topic create --brokers redpanda:9092 taxi-locations --config cleanup.policy=compact
        rpk topic create --brokers redpanda:9092 taxi-sessions --config cleanup.policy=compact
    depends_on:
      - redpanda
    init: true

  zilla:
    image: ghcr.io/aklivity/zilla:latest
    container_name: zilla
    restart: unless-stopped
    depends_on:
      - redpanda
    ports:
      - 7114:7114
      - 7183:7183
      - 7190:7190
    volumes:
      - ./zilla.yaml:/etc/zilla/zilla.yaml
      - ./grpc/taxi_route.proto:/etc/zilla/proto/taxi_route.proto
    environment:
      TAXI_ROUTE_SERVER_HOST: taxi-service
      TAXI_ROUTE_SERVER_PORT: 50051
      KAFKA_HOST: redpanda
      KAFKA_PORT: 9092
    command: start -v -e -Pzilla.engine.worker.capacity=512

  taxi-gateway:
    build: ./grpc/gateway
    container_name: taxi-gateway
    image: aklivity/taxi-gateway:local
    restart: unless-stopped
    environment:
      GATEWAY_PORT: 8085
      GRPC_SERVER_ENDPOINT: zilla:7114
    ports:
      - 8085:8085

  taxi-service:
    build: ./grpc/service
    container_name: taxi-service
    image: aklivity/taxi-service:local
    restart: unless-stopped
    depends_on:
      redpanda-init:
        condition: service_completed_successfully
    volumes:
      - ./grpc/service/default_routes.json:/usr/src/app/default_routes.json
    environment:
      PRINT_SIM_LOGS: false
      DEFAUlT_ROUTES: true
      BROKER_HOST: zilla
    ports:
      - 50051:50051

  taxi-map-ui:
    build: ./map-ui
    container_name: taxi-map-ui
    image: aklivity/taxi-map-ui:local
    restart: unless-stopped
    depends_on:
      redpanda-init:
        condition: service_completed_successfully
    user: "${UID:-0}:${GID:-0}"
    environment:
      TAXIROUTEAPI: "http://localhost:8085/taxiroute.TaxiRoute/CreateTaxi"
      TAXILOCATIONAPI: "http://localhost:7114/taxi/locations"
    ports:
      - 80:80

networks:
  default:
    name: zilla-taxi-demo-network
    driver: bridge
