version: '3'
services:
  kafka:
    image: docker.io/bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:9092"
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_BROKER_ID: "1"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@127.0.0.1:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CLIENT:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LOG_DIRS: "/tmp/logs"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_LISTENERS: "CLIENT://:9092,INTERNAL://:29092,CONTROLLER://:9093"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_CFG_ADVERTISED_LISTENERS: "CLIENT://kafka:9092,INTERNAL://kafka:29092"

  kafka-init:
    image: docker.io/bitnami/kafka:latest
    command: 
      - "/bin/bash"
      - "-c"
      -  | 
        /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists --topic http_messages
        /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists --topic grpc_messages
        /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists --topic grpc_exchanges
        /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists --topic sse_messages
    depends_on:
      - kafka
    init: true

  zilla:
    image: ghcr.io/aklivity/zilla:latest
    container_name: zilla
    depends_on:
      - kafka
    ports:
      - "8080:8080"
      - "9090:9090"
    volumes:
      - ./zilla:/etc/zilla
    environment:
      KEYSTORE_PASSWORD: generated
    command: start -v

  grpc_client:
    build: ./services/grpc-client
    container_name: grpc_client
    depends_on:
      - zilla
    command:
      - "sh"
      - "-c"
      - |
          wget -qO- https://raw.githubusercontent.com/eficode/wait-for/v2.2.3/wait-for | 
          sh -s -- zilla:8080 --timeout=160 -- echo "zilla ready";
          java -jar grpc-client-1.0-SNAPSHOT-shaded.jar;

  kafka_event_translator:
    build: ./services/kafka-event-translator
    container_name: kafka_event_translator
    depends_on:
      kafka-init:
        condition: service_completed_successfully

  vortex_ui:
    build:
      context: ./ui
    container_name: vortex_ui
    ports:
    - '80:80'
    volumes:
    - './ui:/app'

  http_messages:
    image: confluentinc/cp-kafkacat:7.0.9.arm64
    container_name: http_messages
    depends_on:
      kafka-init:
        condition: service_completed_successfully
    command:  kafkacat -C -b kafka:9092 -t http_messages -J -u
         

  grpc_messages:
    image: confluentinc/cp-kafkacat:7.0.9.arm64
    container_name: grpc_messages
    depends_on:
      kafka-init:
        condition: service_completed_successfully
    command: kafkacat -C -b kafka:9092 -t grpc_messages -J -u
          

  sse_messages:
    image: confluentinc/cp-kafkacat:7.0.9.arm64
    container_name: sse_messages
    depends_on:
      kafka-init:
        condition: service_completed_successfully
    command: kafkacat -C -b kafka:9092 -t sse_messages -J -u
          


networks:
  default:
    name: zilla-network

