---
name: example
bindings:
  north_tcp_server:
    type: tcp
    kind: server
    options:
      host: 0.0.0.0
      port:
        - 7114
    routes:
      - when:
          - port: 7114
        exit: north_http_server
  north_http_server:
    type: http
    kind: server
    options:
      access-control:
        policy: cross-origin
    routes:
      - when:
          - headers:
              :path: /matches
          - headers:
              :path: /matches/*
          - headers:
              :path: /bet-verified/*
          - headers:
              :path: /user-profile/*
        exit: north_sse_server
      - when:
          - headers:
              :path: /bet
          - headers:
              :path: /user
        exit: north_http_kafka_mapping
  north_sse_server:
    type: sse
    kind: server
    exit: north_sse_kafka_mapping
  north_sse_kafka_mapping:
    type: sse-kafka
    kind: proxy
    routes:
      - when:
          - path: /{topic}/{id}
        exit: north_kafka_cache_client
        with:
          topic: ${params.topic}
          filters:
            - key: ${params.id}
      - when:
          - path: /{topic}
        exit: north_kafka_cache_client
        with:
          topic: ${params.topic}
  north_http_kafka_mapping:
    type: http-kafka
    kind: proxy
    routes:
      - when:
          - method: POST
            path: /bet
        exit: north_kafka_cache_client
        with:
          capability: produce
          topic: bet-placed
          key: ${idempotencyKey}
      - when:
          - method: POST
            path: /user
        exit: north_kafka_cache_client
        with:
          capability: produce
          topic: user-profile
          key: ${idempotencyKey}
  north_kafka_cache_client:
    type: kafka
    kind: cache_client
    exit: south_kafka_cache_server
  south_kafka_cache_server:
    type: kafka
    kind: cache_server
    options:
      bootstrap:
        - bet-verified
        - user-profile
      topics:
        - name: matches
          defaultOffset: live
    exit: south_kafka_client
  south_kafka_client:
    type: kafka
    kind: client
    options:
      servers:
        - ${{env.KAFKA_BOOTSTRAP_SERVER}}
    exit: south_tcp_client
  south_tcp_client:
    type: tcp
    kind: client
telemetry:
  exporters:
    stdout_logs_exporter:
      type: stdout
